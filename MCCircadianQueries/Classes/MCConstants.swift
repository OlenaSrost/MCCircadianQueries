import Foundation
import HealthKit

// Controls the features compiled into the app.
public struct Deployment {
    public static let sharedInstance = Deployment()

    public let withDebugView : Bool = true
}

/*
 * HealthKit constants
 */

public struct HMConstants
{
    public static let sharedInstance = HMConstants()

    // Default values if unavailable in user profile.
    public let defaultToMetricUnits = ((Locale.current as NSLocale).object(forKey: NSLocale.Key.usesMetricSystem)! as AnyObject).boolValue

    // Metadata key for generated samples.
    public let generatedSampleKey : String = "MCLGen"
    public let generatedUploadSampleKey : String = "MCUGen"

    public let healthKitTypesWithCustomMetrics: Set<String> = [
        HKQuantityTypeIdentifier.bodyMass.rawValue,
        HKQuantityTypeIdentifier.height.rawValue,
        HKQuantityTypeIdentifier.leanBodyMass.rawValue
    ]

    // Note: these are in alphabetical order within each type.
    public let healthKitTypesToRead : Set<HKObjectType>? = [
        HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.sleepAnalysis)!,
        HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.appleStandHour)!,
        HKObjectType.characteristicType(forIdentifier: HKCharacteristicTypeIdentifier.bloodType)!,
        HKObjectType.characteristicType(forIdentifier: HKCharacteristicTypeIdentifier.biologicalSex)!,
        HKObjectType.characteristicType(forIdentifier: HKCharacteristicTypeIdentifier.fitzpatrickSkinType)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.activeEnergyBurned)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalBodyTemperature)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalEnergyBurned)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodAlcoholContent)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodGlucose)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureDiastolic)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureSystolic)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyFatPercentage)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMass)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMassIndex)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyTemperature)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryBiotin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCaffeine)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCalcium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCarbohydrates)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCholesterol)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChloride)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChromium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCopper)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryEnergyConsumed)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatMonounsaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatPolyunsaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatSaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatTotal)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFiber)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFolate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIodine)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIron)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMagnesium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryManganese)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMolybdenum)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryNiacin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPantothenicAcid)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPhosphorus)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPotassium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryProtein)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryRiboflavin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySelenium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySodium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySugar)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryThiamin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminA)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB12)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB6)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminC)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminD)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminE)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminK)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryWater)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryZinc)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.distanceWalkingRunning)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.electrodermalActivity)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.flightsClimbed)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedExpiratoryVolume1)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedVitalCapacity)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.heartRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.height)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.inhalerUsage)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.leanBodyMass)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.nikeFuel)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.numberOfTimesFallen)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.oxygenSaturation)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peakExpiratoryFlowRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peripheralPerfusionIndex)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.respiratoryRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.stepCount)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.uvExposure)!,
        HKObjectType.workoutType()
    ]

    public let healthKitTypesToWrite : Set<HKSampleType>? =
        Deployment.sharedInstance.withDebugView ?
            // Cannot write apple stand hour, nike fuel.
            [
                HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.sleepAnalysis)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.activeEnergyBurned)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalBodyTemperature)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalEnergyBurned)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodAlcoholContent)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodGlucose)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureDiastolic)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureSystolic)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyFatPercentage)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMass)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMassIndex)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyTemperature)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryBiotin)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCalcium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCaffeine)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCarbohydrates)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCholesterol)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChloride)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChromium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCopper)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryEnergyConsumed)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatMonounsaturated)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatPolyunsaturated)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatSaturated)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatTotal)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFiber)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFolate)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIodine)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIron)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMagnesium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryManganese)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMolybdenum)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryNiacin)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPantothenicAcid)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPhosphorus)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPotassium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryProtein)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryRiboflavin)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySelenium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySodium)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySugar)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryThiamin)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminA)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB12)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB6)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminC)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminD)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminE)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminK)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryWater)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryZinc)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.distanceWalkingRunning)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.electrodermalActivity)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.flightsClimbed)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedExpiratoryVolume1)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedVitalCapacity)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.heartRate)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.height)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.inhalerUsage)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.leanBodyMass)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.numberOfTimesFallen)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.oxygenSaturation)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peakExpiratoryFlowRate)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peripheralPerfusionIndex)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.respiratoryRate)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.stepCount)!,
                HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.uvExposure)!,
                HKObjectType.workoutType()
            ]
            :
            [
                HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.sleepAnalysis)!,
                HKQuantityType.workoutType()
            ]

    // Note: these are in alphabetical order within each type.
    public let healthKitTypesToObserve : [HKSampleType] = [
        HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.sleepAnalysis)!,
        HKObjectType.categoryType(forIdentifier: HKCategoryTypeIdentifier.appleStandHour)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.activeEnergyBurned)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalBodyTemperature)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.basalEnergyBurned)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodAlcoholContent)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodGlucose)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureDiastolic)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bloodPressureSystolic)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyFatPercentage)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMass)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyMassIndex)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.bodyTemperature)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryBiotin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCalcium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCaffeine)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCarbohydrates)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCholesterol)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChloride)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryChromium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryCopper)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryEnergyConsumed)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatMonounsaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatPolyunsaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatSaturated)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFatTotal)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFiber)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryFolate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIodine)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryIron)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMagnesium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryManganese)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryMolybdenum)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryNiacin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPantothenicAcid)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPhosphorus)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryPotassium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryProtein)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryRiboflavin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySelenium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySodium)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietarySugar)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryThiamin)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminA)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB12)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminB6)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminC)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminD)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminE)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryVitaminK)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryWater)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.dietaryZinc)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.distanceWalkingRunning)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.electrodermalActivity)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.flightsClimbed)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedExpiratoryVolume1)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.forcedVitalCapacity)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.heartRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.height)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.inhalerUsage)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.leanBodyMass)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.nikeFuel)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.numberOfTimesFallen)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.oxygenSaturation)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peakExpiratoryFlowRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.peripheralPerfusionIndex)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.respiratoryRate)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.stepCount)!,
        HKObjectType.quantityType(forIdentifier: HKQuantityTypeIdentifier.uvExposure)!,
        HKObjectType.workoutType()
    ]

    // Note: these are in alphabetical order within each type.
    public let healthKitShortNames : [String: String] = [
        HKCategoryTypeIdentifier.appleStandHour.rawValue            : "Stood",
        HKCategoryTypeIdentifier.sleepAnalysis.rawValue             : "Sleep",
        HKCharacteristicTypeIdentifier.bloodType.rawValue           : "Blood type",
        HKCharacteristicTypeIdentifier.biologicalSex.rawValue       : "Sex",
        HKCharacteristicTypeIdentifier.fitzpatrickSkinType.rawValue : "Skin type",
        HKCorrelationTypeIdentifier.bloodPressure.rawValue          : "BP",
        HKQuantityTypeIdentifier.activeEnergyBurned.rawValue        : "Cal burned",
        HKQuantityTypeIdentifier.basalBodyTemperature.rawValue      : "Temperature(B)",
        HKQuantityTypeIdentifier.basalEnergyBurned.rawValue         : "Cal burned(B)",
        HKQuantityTypeIdentifier.bloodAlcoholContent.rawValue       : "BAC",
        HKQuantityTypeIdentifier.bloodGlucose.rawValue              : "Glucose",
        HKQuantityTypeIdentifier.bloodPressureDiastolic.rawValue    : "BP Diastolic",
        HKQuantityTypeIdentifier.bloodPressureSystolic.rawValue     : "BP Systolic",
        HKQuantityTypeIdentifier.bodyFatPercentage.rawValue         : "Body Fat",
        HKQuantityTypeIdentifier.bodyMass.rawValue                  : "Weight",
        HKQuantityTypeIdentifier.bodyMassIndex.rawValue             : "BMI",
        HKQuantityTypeIdentifier.bodyTemperature.rawValue           : "Temperature",
        HKQuantityTypeIdentifier.dietaryBiotin.rawValue             : "Biotin",
        HKQuantityTypeIdentifier.dietaryCalcium.rawValue            : "Calcium",
        HKQuantityTypeIdentifier.dietaryCaffeine.rawValue           : "Caffeine",
        HKQuantityTypeIdentifier.dietaryCarbohydrates.rawValue      : "Carbs",
        HKQuantityTypeIdentifier.dietaryCholesterol.rawValue        : "Cholesterol",
        HKQuantityTypeIdentifier.dietaryChloride.rawValue           : "Chloride",
        HKQuantityTypeIdentifier.dietaryChromium.rawValue           : "Chromium",
        HKQuantityTypeIdentifier.dietaryCopper.rawValue             : "Copper",
        HKQuantityTypeIdentifier.dietaryEnergyConsumed.rawValue     : "Net Calories",
        HKQuantityTypeIdentifier.dietaryFatMonounsaturated.rawValue : "Fat(MS)",
        HKQuantityTypeIdentifier.dietaryFatPolyunsaturated.rawValue : "Fat(PS)",
        HKQuantityTypeIdentifier.dietaryFatSaturated.rawValue       : "Fat(S)",
        HKQuantityTypeIdentifier.dietaryFatTotal.rawValue           : "Fat",
        HKQuantityTypeIdentifier.dietaryFiber.rawValue              : "Fiber",
        HKQuantityTypeIdentifier.dietaryFolate.rawValue             : "Folate",
        HKQuantityTypeIdentifier.dietaryIodine.rawValue             : "Iodine",
        HKQuantityTypeIdentifier.dietaryIron.rawValue               : "Iron",
        HKQuantityTypeIdentifier.dietaryMagnesium.rawValue          : "Magnesium",
        HKQuantityTypeIdentifier.dietaryManganese.rawValue          : "Manganese",
        HKQuantityTypeIdentifier.dietaryMolybdenum.rawValue         : "Molybdenum",
        HKQuantityTypeIdentifier.dietaryNiacin.rawValue             : "Niacin",
        HKQuantityTypeIdentifier.dietaryPantothenicAcid.rawValue    : "Pant. Acid",
        HKQuantityTypeIdentifier.dietaryPhosphorus.rawValue         : "Phosphorus",
        HKQuantityTypeIdentifier.dietaryPotassium.rawValue          : "Potassium",
        HKQuantityTypeIdentifier.dietaryProtein.rawValue            : "Protein",
        HKQuantityTypeIdentifier.dietaryRiboflavin.rawValue         : "Riboflavin",
        HKQuantityTypeIdentifier.dietarySelenium.rawValue           : "Selenium",
        HKQuantityTypeIdentifier.dietarySodium.rawValue             : "Salt",
        HKQuantityTypeIdentifier.dietarySugar.rawValue              : "Sugar",
        HKQuantityTypeIdentifier.dietaryThiamin.rawValue            : "Thiamin",
        HKQuantityTypeIdentifier.dietaryVitaminA.rawValue           : "Vit. A",
        HKQuantityTypeIdentifier.dietaryVitaminB12.rawValue         : "Vit. B12",
        HKQuantityTypeIdentifier.dietaryVitaminB6.rawValue          : "Vit. B6",
        HKQuantityTypeIdentifier.dietaryVitaminC.rawValue           : "Vit. C",
        HKQuantityTypeIdentifier.dietaryVitaminD.rawValue           : "Vit. D",
        HKQuantityTypeIdentifier.dietaryVitaminE.rawValue           : "Vit. E",
        HKQuantityTypeIdentifier.dietaryVitaminK.rawValue           : "Vit. K",
        HKQuantityTypeIdentifier.dietaryWater.rawValue              : "Water",
        HKQuantityTypeIdentifier.dietaryZinc.rawValue               : "Zinc",
        HKQuantityTypeIdentifier.distanceWalkingRunning.rawValue    : "Distance",
        HKQuantityTypeIdentifier.electrodermalActivity.rawValue     : "Electrodermal",
        HKQuantityTypeIdentifier.flightsClimbed.rawValue            : "Climbed",
        HKQuantityTypeIdentifier.forcedExpiratoryVolume1.rawValue   : "Exp. Volume",
        HKQuantityTypeIdentifier.forcedVitalCapacity.rawValue       : "Vital Capacity",
        HKQuantityTypeIdentifier.heartRate.rawValue                 : "Heart rate",
        HKQuantityTypeIdentifier.height.rawValue                    : "Height",
        HKQuantityTypeIdentifier.inhalerUsage.rawValue              : "Inhaler",
        HKQuantityTypeIdentifier.leanBodyMass.rawValue              : "Lean Weight",
        HKQuantityTypeIdentifier.nikeFuel.rawValue                  : "Nike Fuel",
        HKQuantityTypeIdentifier.numberOfTimesFallen.rawValue       : "Fallen",
        HKQuantityTypeIdentifier.oxygenSaturation.rawValue          : "Oxygen",
        HKQuantityTypeIdentifier.peakExpiratoryFlowRate.rawValue    : "Exp. Flow",
        HKQuantityTypeIdentifier.peripheralPerfusionIndex.rawValue  : "Perfusion",
        HKQuantityTypeIdentifier.respiratoryRate.rawValue           : "Respiratory",
        HKQuantityTypeIdentifier.stepCount.rawValue                 : "Steps",
        HKQuantityTypeIdentifier.uvExposure.rawValue                : "Light",
        HKObjectType.workoutType().identifier             : "Workouts/Meals"
    ]

    // Note: We use strings as short ids to be compatible with JSON dictionary keys.
    public let healthKitShortIds : [String: String] = [
        HKCategoryTypeIdentifier.sleepAnalysis.rawValue             : "0",
        HKCategoryTypeIdentifier.appleStandHour.rawValue            : "1",
        HKQuantityTypeIdentifier.activeEnergyBurned.rawValue        : "2",
        HKQuantityTypeIdentifier.basalBodyTemperature.rawValue      : "3",
        HKQuantityTypeIdentifier.basalEnergyBurned.rawValue         : "4",
        HKQuantityTypeIdentifier.bloodAlcoholContent.rawValue       : "5",
        HKQuantityTypeIdentifier.bloodGlucose.rawValue              : "6",
        HKQuantityTypeIdentifier.bloodPressureDiastolic.rawValue    : "7",
        HKQuantityTypeIdentifier.bloodPressureSystolic.rawValue     : "8",
        HKQuantityTypeIdentifier.bodyFatPercentage.rawValue         : "9",
        HKQuantityTypeIdentifier.bodyMass.rawValue                  : "10",
        HKQuantityTypeIdentifier.bodyMassIndex.rawValue             : "11",
        HKQuantityTypeIdentifier.bodyTemperature.rawValue           : "12",
        HKQuantityTypeIdentifier.dietaryBiotin.rawValue             : "13",
        HKQuantityTypeIdentifier.dietaryCalcium.rawValue            : "14",
        HKQuantityTypeIdentifier.dietaryCaffeine.rawValue           : "15",
        HKQuantityTypeIdentifier.dietaryCarbohydrates.rawValue      : "16",
        HKQuantityTypeIdentifier.dietaryCholesterol.rawValue        : "17",
        HKQuantityTypeIdentifier.dietaryChloride.rawValue           : "18",
        HKQuantityTypeIdentifier.dietaryChromium.rawValue           : "19",
        HKQuantityTypeIdentifier.dietaryCopper.rawValue             : "20",
        HKQuantityTypeIdentifier.dietaryEnergyConsumed.rawValue     : "21",
        HKQuantityTypeIdentifier.dietaryFatMonounsaturated.rawValue : "22",
        HKQuantityTypeIdentifier.dietaryFatPolyunsaturated.rawValue : "23",
        HKQuantityTypeIdentifier.dietaryFatSaturated.rawValue       : "24",
        HKQuantityTypeIdentifier.dietaryFatTotal.rawValue           : "25",
        HKQuantityTypeIdentifier.dietaryFiber.rawValue              : "26",
        HKQuantityTypeIdentifier.dietaryFolate.rawValue             : "27",
        HKQuantityTypeIdentifier.dietaryIodine.rawValue             : "28",
        HKQuantityTypeIdentifier.dietaryIron.rawValue               : "29",
        HKQuantityTypeIdentifier.dietaryMagnesium.rawValue          : "30",
        HKQuantityTypeIdentifier.dietaryManganese.rawValue          : "31",
        HKQuantityTypeIdentifier.dietaryMolybdenum.rawValue         : "32",
        HKQuantityTypeIdentifier.dietaryNiacin.rawValue             : "33",
        HKQuantityTypeIdentifier.dietaryPantothenicAcid.rawValue    : "34",
        HKQuantityTypeIdentifier.dietaryPhosphorus.rawValue         : "35",
        HKQuantityTypeIdentifier.dietaryPotassium.rawValue          : "36",
        HKQuantityTypeIdentifier.dietaryProtein.rawValue            : "37",
        HKQuantityTypeIdentifier.dietaryRiboflavin.rawValue         : "38",
        HKQuantityTypeIdentifier.dietarySelenium.rawValue           : "39",
        HKQuantityTypeIdentifier.dietarySodium.rawValue             : "40",
        HKQuantityTypeIdentifier.dietarySugar.rawValue              : "41",
        HKQuantityTypeIdentifier.dietaryThiamin.rawValue            : "42",
        HKQuantityTypeIdentifier.dietaryVitaminA.rawValue           : "43",
        HKQuantityTypeIdentifier.dietaryVitaminB12.rawValue         : "44",
        HKQuantityTypeIdentifier.dietaryVitaminB6.rawValue          : "45",
        HKQuantityTypeIdentifier.dietaryVitaminC.rawValue           : "46",
        HKQuantityTypeIdentifier.dietaryVitaminD.rawValue           : "47",
        HKQuantityTypeIdentifier.dietaryVitaminE.rawValue           : "48",
        HKQuantityTypeIdentifier.dietaryVitaminK.rawValue           : "49",
        HKQuantityTypeIdentifier.dietaryWater.rawValue              : "50",
        HKQuantityTypeIdentifier.dietaryZinc.rawValue               : "51",
        HKQuantityTypeIdentifier.distanceWalkingRunning.rawValue    : "52",
        HKQuantityTypeIdentifier.electrodermalActivity.rawValue     : "53",
        HKQuantityTypeIdentifier.flightsClimbed.rawValue            : "54",
        HKQuantityTypeIdentifier.forcedExpiratoryVolume1.rawValue   : "55",
        HKQuantityTypeIdentifier.forcedVitalCapacity.rawValue       : "56",
        HKQuantityTypeIdentifier.heartRate.rawValue                 : "57",
        HKQuantityTypeIdentifier.height.rawValue                    : "58",
        HKQuantityTypeIdentifier.inhalerUsage.rawValue              : "59",
        HKQuantityTypeIdentifier.leanBodyMass.rawValue              : "60",
        HKQuantityTypeIdentifier.nikeFuel.rawValue                  : "61",
        HKQuantityTypeIdentifier.numberOfTimesFallen.rawValue       : "62",
        HKQuantityTypeIdentifier.oxygenSaturation.rawValue          : "63",
        HKQuantityTypeIdentifier.peakExpiratoryFlowRate.rawValue    : "64",
        HKQuantityTypeIdentifier.peripheralPerfusionIndex.rawValue  : "65",
        HKQuantityTypeIdentifier.respiratoryRate.rawValue           : "66",
        HKQuantityTypeIdentifier.stepCount.rawValue                 : "67",
        HKQuantityTypeIdentifier.uvExposure.rawValue                : "68",
        HKObjectType.workoutType().identifier             : "69",
    ]

    // A mapping between HealthKit types and MC database schema attributes.
    //
    // TODO: the following types have a more complex mapping.
    // HKCorrelationTypeIdentifierBloodPressure          : "BP",            // Maps to individual components.
    //
    // TODO: the following types should be stored as profile attribute:
    // HKCharacteristicTypeIdentifierBloodType           : "Blood type",
    // HKCharacteristicTypeIdentifierBiologicalSex       : "Sex",
    // HKCharacteristicTypeIdentifierFitzpatrickSkinType : "Skin type",
    //

    // MCDB columns that are categorized types.
    public let mcdbCategorized: Set<String>  = ["meal_duration", "activity_duration", "activity_value"]

    // HealthKit quantity types that should query activity values subcomponents.
    public let hkQuantityToMCDBActivity : [String: (String, String)] = [
        HKQuantityTypeIdentifier.distanceWalkingRunning.rawValue    : ("distance_walking_running", "distance"),
        HKQuantityTypeIdentifier.flightsClimbed.rawValue            : ("flights_climbed", "flights"),
        HKQuantityTypeIdentifier.stepCount.rawValue                 : ("step_count", "step_count")
    ]

    // MCDB categorized values that should convert into HealthKit quantities.
    // This should be the inverse of the hkQuantityToMCDBActivity mapping.
    public let mcdbActivityToHKQuantity: [String: (String, String)] = [
        "distance_walking_running" : ("distance",   HKQuantityTypeIdentifier.distanceWalkingRunning.rawValue),
        "flights_climbed"          : ("flights",    HKQuantityTypeIdentifier.flightsClimbed.rawValue),
        "step_count"               : ("step_count", HKQuantityTypeIdentifier.stepCount.rawValue)
    ]

    public let hkToMCDB : [Int : String] = [
        HKCategoryTypeIdentifier.appleStandHour.hashValue           : "apple_stand_hour",
        HKCategoryTypeIdentifier.sleepAnalysis.hashValue        : "sleep_duration",
        HKQuantityTypeIdentifier.activeEnergyBurned.hashValue        : "active_energy_burned",
        HKQuantityTypeIdentifier.basalBodyTemperature.hashValue      : "basal_body_temperature",
        HKQuantityTypeIdentifier.basalEnergyBurned.hashValue         : "basal_energy_burned",
        HKQuantityTypeIdentifier.bloodAlcoholContent.hashValue       : "blood_alcohol_content",
        HKQuantityTypeIdentifier.bloodGlucose.hashValue              : "blood_glucose",
        HKQuantityTypeIdentifier.bloodPressureDiastolic.hashValue    : "diastolic_blood_pressure",
        HKQuantityTypeIdentifier.bloodPressureSystolic.hashValue     : "systolic_blood_pressure",
        HKQuantityTypeIdentifier.bodyFatPercentage.hashValue         : "body_fat_percentage",
        HKQuantityTypeIdentifier.bodyMass.hashValue                  : "body_weight",
        HKQuantityTypeIdentifier.bodyMassIndex.hashValue             : "body_mass_index",
        HKQuantityTypeIdentifier.bodyTemperature.hashValue           : "body_temperature",
        HKQuantityTypeIdentifier.dietaryBiotin.hashValue             : "dietary_biotin",
        HKQuantityTypeIdentifier.dietaryCalcium.hashValue            : "dietary_calcium",
        HKQuantityTypeIdentifier.dietaryCaffeine.hashValue           : "dietary_caffeine",
        HKQuantityTypeIdentifier.dietaryCarbohydrates.hashValue      : "dietary_carbohydrates",
        HKQuantityTypeIdentifier.dietaryCholesterol.hashValue        : "dietary_cholesterol",
        HKQuantityTypeIdentifier.dietaryChloride.hashValue           : "dietary_chloride",
        HKQuantityTypeIdentifier.dietaryChromium.hashValue           : "dietary_chromium",
        HKQuantityTypeIdentifier.dietaryCopper.hashValue             : "dietary_copper",
        HKQuantityTypeIdentifier.dietaryEnergyConsumed.hashValue     : "dietary_energy_consumed",
        HKQuantityTypeIdentifier.dietaryFatMonounsaturated.hashValue : "dietary_fat_monounsaturated",
        HKQuantityTypeIdentifier.dietaryFatPolyunsaturated.hashValue : "dietary_fat_polyunsaturated",
        HKQuantityTypeIdentifier.dietaryFatSaturated.hashValue       : "dietary_fat_saturated",
        HKQuantityTypeIdentifier.dietaryFatTotal.hashValue           : "dietary_fat_total",
        HKQuantityTypeIdentifier.dietaryFiber.hashValue              : "dietary_fiber",
        HKQuantityTypeIdentifier.dietaryFolate.hashValue             : "dietary_folate",
        HKQuantityTypeIdentifier.dietaryIodine.hashValue             : "dietary_iodine",
        HKQuantityTypeIdentifier.dietaryIron.hashValue               : "dietary_iron",
        HKQuantityTypeIdentifier.dietaryMagnesium.hashValue          : "dietary_magnesium",
        HKQuantityTypeIdentifier.dietaryManganese.hashValue          : "dietary_manganese",
        HKQuantityTypeIdentifier.dietaryMolybdenum.hashValue         : "dietary_molybdenum",
        HKQuantityTypeIdentifier.dietaryNiacin.hashValue             : "dietary_niacin",
        HKQuantityTypeIdentifier.dietaryPantothenicAcid.hashValue    : "dietary_pantothenic_acid",
        HKQuantityTypeIdentifier.dietaryPhosphorus.hashValue         : "dietary_phosphorus",
        HKQuantityTypeIdentifier.dietaryPotassium.hashValue          : "dietary_potassium",
        HKQuantityTypeIdentifier.dietaryProtein.hashValue            : "dietary_protein",
        HKQuantityTypeIdentifier.dietaryRiboflavin.hashValue         : "dietary_riboflavin",
        HKQuantityTypeIdentifier.dietarySelenium.hashValue           : "dietary_selenium",
        HKQuantityTypeIdentifier.dietarySodium.hashValue             : "dietary_sodium",
        HKQuantityTypeIdentifier.dietarySugar.hashValue              : "dietary_sugar",
        HKQuantityTypeIdentifier.dietaryThiamin.hashValue            : "dietary_thiamin",
        HKQuantityTypeIdentifier.dietaryVitaminA.hashValue           : "dietary_vitamina",
        HKQuantityTypeIdentifier.dietaryVitaminB12.hashValue         : "dietary_vitaminb12",
        HKQuantityTypeIdentifier.dietaryVitaminB6.hashValue          : "dietary_vitaminb6",
        HKQuantityTypeIdentifier.dietaryVitaminC.hashValue           : "dietary_vitaminc",
        HKQuantityTypeIdentifier.dietaryVitaminD.hashValue           : "dietary_vitamind",
        HKQuantityTypeIdentifier.dietaryVitaminE.hashValue           : "dietary_vitamine",
        HKQuantityTypeIdentifier.dietaryVitaminK.hashValue           : "dietary_vitamink",
        HKQuantityTypeIdentifier.dietaryWater.hashValue              : "dietary_water",
        HKQuantityTypeIdentifier.dietaryZinc.hashValue               : "dietary_zinc",
        HKQuantityTypeIdentifier.electrodermalActivity.hashValue     : "electrodermal_activity",
        HKQuantityTypeIdentifier.forcedExpiratoryVolume1.hashValue   : "forced_expiratory_volume_one_second",
        HKQuantityTypeIdentifier.forcedVitalCapacity.hashValue       : "forced_vital_capacity",
        HKQuantityTypeIdentifier.heartRate.hashValue                 : "heart_rate",
        HKQuantityTypeIdentifier.height.hashValue                    : "body_height",
        HKQuantityTypeIdentifier.inhalerUsage.hashValue              : "inhaler_usage",
        HKQuantityTypeIdentifier.leanBodyMass.hashValue              : "lean_body_mass",
        HKQuantityTypeIdentifier.nikeFuel.hashValue                  : "nike_fuel",
        HKQuantityTypeIdentifier.numberOfTimesFallen.hashValue       : "number_of_times_fallen",
        HKQuantityTypeIdentifier.oxygenSaturation.hashValue          : "blood_oxygen_saturation",
        HKQuantityTypeIdentifier.peakExpiratoryFlowRate.hashValue    : "peak_expiratory_flow",
        HKQuantityTypeIdentifier.peripheralPerfusionIndex.hashValue  : "peripheral_perfusion_index",
        HKQuantityTypeIdentifier.respiratoryRate.hashValue           : "respiratory_rate",
        HKQuantityTypeIdentifier.uvExposure.hashValue                : "uv_exposure"
    ]

    public let mcdbToHK : [String: Int] = [
        "apple_stand_hour"                    : HKCategoryTypeIdentifier.appleStandHour.hashValue            ,
        "sleep_duration"                      : HKCategoryTypeIdentifier.sleepAnalysis.hashValue             ,
        "active_energy_burned"                : HKQuantityTypeIdentifier.activeEnergyBurned.hashValue        ,
        "basal_body_temperature"              : HKQuantityTypeIdentifier.basalBodyTemperature.hashValue      ,
        "basal_energy_burned"                 : HKQuantityTypeIdentifier.basalEnergyBurned.hashValue         ,
        "blood_alcohol_content"               : HKQuantityTypeIdentifier.bloodAlcoholContent.hashValue       ,
        "blood_glucose"                       : HKQuantityTypeIdentifier.bloodGlucose.hashValue              ,
        "diastolic_blood_pressure"            : HKQuantityTypeIdentifier.bloodPressureDiastolic.hashValue    ,
        "systolic_blood_pressure"             : HKQuantityTypeIdentifier.bloodPressureSystolic.hashValue     ,
        "body_fat_percentage"                 : HKQuantityTypeIdentifier.bodyFatPercentage.hashValue         ,
        "body_weight"                         : HKQuantityTypeIdentifier.bodyMass.hashValue                  ,
        "body_mass_index"                     : HKQuantityTypeIdentifier.bodyMassIndex.hashValue             ,
        "body_temperature"                    : HKQuantityTypeIdentifier.bodyTemperature.hashValue           ,
        "dietary_biotin"                      : HKQuantityTypeIdentifier.dietaryBiotin.hashValue             ,
        "dietary_calcium"                     : HKQuantityTypeIdentifier.dietaryCalcium.hashValue            ,
        "dietary_caffeine"                    : HKQuantityTypeIdentifier.dietaryCaffeine.hashValue           ,
        "dietary_carbohydrates"               : HKQuantityTypeIdentifier.dietaryCarbohydrates.hashValue      ,
        "dietary_cholesterol"                 : HKQuantityTypeIdentifier.dietaryCholesterol.hashValue        ,
        "dietary_chloride"                    : HKQuantityTypeIdentifier.dietaryChloride.hashValue           ,
        "dietary_chromium"                    : HKQuantityTypeIdentifier.dietaryChromium.hashValue           ,
        "dietary_copper"                      : HKQuantityTypeIdentifier.dietaryCopper.hashValue             ,
        "dietary_energy_consumed"             : HKQuantityTypeIdentifier.dietaryEnergyConsumed.hashValue     ,
        "dietary_fat_monounsaturated"         : HKQuantityTypeIdentifier.dietaryFatMonounsaturated.hashValue ,
        "dietary_fat_polyunsaturated"         : HKQuantityTypeIdentifier.dietaryFatPolyunsaturated.hashValue ,
        "dietary_fat_saturated"               : HKQuantityTypeIdentifier.dietaryFatSaturated.hashValue       ,
        "dietary_fat_total"                   : HKQuantityTypeIdentifier.dietaryFatTotal.hashValue           ,
        "dietary_fiber"                       : HKQuantityTypeIdentifier.dietaryFiber.hashValue              ,
        "dietary_folate"                      : HKQuantityTypeIdentifier.dietaryFolate.hashValue             ,
        "dietary_iodine"                      : HKQuantityTypeIdentifier.dietaryIodine.hashValue             ,
        "dietary_iron"                        : HKQuantityTypeIdentifier.dietaryIron.hashValue               ,
        "dietary_magnesium"                   : HKQuantityTypeIdentifier.dietaryMagnesium.hashValue          ,
        "dietary_manganese"                   : HKQuantityTypeIdentifier.dietaryManganese.hashValue          ,
        "dietary_molybdenum"                  : HKQuantityTypeIdentifier.dietaryMolybdenum.hashValue         ,
        "dietary_niacin"                      : HKQuantityTypeIdentifier.dietaryNiacin.hashValue             ,
        "dietary_pantothenic_acid"            : HKQuantityTypeIdentifier.dietaryPantothenicAcid.hashValue    ,
        "dietary_phosphorus"                  : HKQuantityTypeIdentifier.dietaryPhosphorus.hashValue         ,
        "dietary_potassium"                   : HKQuantityTypeIdentifier.dietaryPotassium.hashValue          ,
        "dietary_protein"                     : HKQuantityTypeIdentifier.dietaryProtein.hashValue            ,
        "dietary_riboflavin"                  : HKQuantityTypeIdentifier.dietaryRiboflavin.hashValue         ,
        "dietary_selenium"                    : HKQuantityTypeIdentifier.dietarySelenium.hashValue           ,
        "dietary_sodium"                      : HKQuantityTypeIdentifier.dietarySodium.hashValue             ,
        "dietary_sugar"                       : HKQuantityTypeIdentifier.dietarySugar.hashValue              ,
        "dietary_thiamin"                     : HKQuantityTypeIdentifier.dietaryThiamin.hashValue            ,
        "dietary_vitamina"                    : HKQuantityTypeIdentifier.dietaryVitaminA.hashValue           ,
        "dietary_vitaminb12"                  : HKQuantityTypeIdentifier.dietaryVitaminB12.hashValue         ,
        "dietary_vitaminb6"                   : HKQuantityTypeIdentifier.dietaryVitaminB6.hashValue          ,
        "dietary_vitaminc"                    : HKQuantityTypeIdentifier.dietaryVitaminC.hashValue           ,
        "dietary_vitamind"                    : HKQuantityTypeIdentifier.dietaryVitaminD.hashValue           ,
        "dietary_vitamine"                    : HKQuantityTypeIdentifier.dietaryVitaminE.hashValue           ,
        "dietary_vitamink"                    : HKQuantityTypeIdentifier.dietaryVitaminK.hashValue           ,
        "dietary_water"                       : HKQuantityTypeIdentifier.dietaryWater.hashValue              ,
        "dietary_zinc"                        : HKQuantityTypeIdentifier.dietaryZinc.hashValue               ,
        "electrodermal_activity"              : HKQuantityTypeIdentifier.electrodermalActivity.hashValue     ,
        "forced_expiratory_volume_one_second" : HKQuantityTypeIdentifier.forcedExpiratoryVolume1.hashValue   ,
        "forced_vital_capacity"               : HKQuantityTypeIdentifier.forcedVitalCapacity.hashValue       ,
        "heart_rate"                          : HKQuantityTypeIdentifier.heartRate.hashValue                 ,
        "body_height"                         : HKQuantityTypeIdentifier.height.hashValue                    ,
        "inhaler_usage"                       : HKQuantityTypeIdentifier.inhalerUsage.hashValue              ,
        "lean_body_mass"                      : HKQuantityTypeIdentifier.leanBodyMass.hashValue              ,
        "nike_fuel"                           : HKQuantityTypeIdentifier.nikeFuel.hashValue                  ,
        "number_of_times_fallen"              : HKQuantityTypeIdentifier.numberOfTimesFallen.hashValue       ,
        "blood_oxygen_saturation"             : HKQuantityTypeIdentifier.oxygenSaturation.hashValue          ,
        "peak_expiratory_flow"                : HKQuantityTypeIdentifier.peakExpiratoryFlowRate.hashValue    ,
        "peripheral_perfusion_index"          : HKQuantityTypeIdentifier.peripheralPerfusionIndex.hashValue  ,
        "respiratory_rate"                    : HKQuantityTypeIdentifier.respiratoryRate.hashValue           ,
        "uv_exposure"                         : HKQuantityTypeIdentifier.uvExposure.hashValue
    ]

    public let hkActivityToMCDB : [HKWorkoutActivityType: String] = [
        .americanFootball             : "american_football"               ,
        .archery                      : "archery"                         ,
        .australianFootball           : "australian_football"             ,
        .badminton                    : "badminton"                       ,
        .baseball                     : "baseball"                        ,
        .basketball                   : "basketball"                      ,
        .bowling                      : "bowling"                         ,
        .boxing                       : "boxing"                          ,
        .climbing                     : "climbing"                        ,
        .cricket                      : "cricket"                         ,
        .crossTraining                : "cross_training"                  ,
        .curling                      : "curling"                         ,
        .cycling                      : "cycling"                         ,
        .dance                        : "dance"                           ,
        .danceInspiredTraining        : "dance_inspired_training"         ,
        .elliptical                   : "elliptical"                      ,
        .equestrianSports             : "equestrian_sports"               ,
        .fencing                      : "fencing"                         ,
        .fishing                      : "fishing"                         ,
        .functionalStrengthTraining   : "functional_strength_training"    ,
        .golf                         : "golf"                            ,
        .gymnastics                   : "gymnastics"                      ,
        .handball                     : "handball"                        ,
        .hiking                       : "hiking"                          ,
        .hockey                       : "hockey"                          ,
        .hunting                      : "hunting"                         ,
        .lacrosse                     : "lacrosse"                        ,
        .martialArts                  : "martial_arts"                    ,
        .mindAndBody                  : "mind_and_body"                   ,
        .mixedMetabolicCardioTraining : "mixed_metabolic_cardio_training" ,
        .paddleSports                 : "paddle_sports"                   ,
        .play                         : "play"                            ,
        .preparationAndRecovery       : "preparation_and_recovery"        ,
        .racquetball                  : "racquetball"                     ,
        .rowing                       : "rowing"                          ,
        .rugby                        : "rugby"                           ,
        .running                      : "running"                         ,
        .sailing                      : "sailing"                         ,
        .skatingSports                : "skating_sports"                  ,
        .snowSports                   : "snow_sports"                     ,
        .soccer                       : "soccer"                          ,
        .softball                     : "softball"                        ,
        .squash                       : "squash"                          ,
        .stairClimbing                : "stair_climbing"                  ,
        .surfingSports                : "surfing_sports"                  ,
        .swimming                     : "swimming"                        ,
        .tableTennis                  : "table_tennis"                    ,
        .tennis                       : "tennis"                          ,
        .trackAndField                : "track_and_field"                 ,
        .traditionalStrengthTraining  : "traditional_strength_training"   ,
        .volleyball                   : "volleyball"                      ,
        .walking                      : "walking"                         ,
        .waterFitness                 : "water_fitness"                   ,
        .waterPolo                    : "water_polo"                      ,
        .waterSports                  : "water_sports"                    ,
        .wrestling                    : "wrestling"                       ,
        .yoga                         : "yoga"                            ,
        .other                        : "other"
    ]

    public let mcActivityToHKActivity: [Int: HKWorkoutActivityType] = [
        1    : HKWorkoutActivityType.americanFootball             ,
        2    : HKWorkoutActivityType.archery                      ,
        3    : HKWorkoutActivityType.australianFootball           ,
        4    : HKWorkoutActivityType.badminton                    ,
        5    : HKWorkoutActivityType.baseball                     ,
        6    : HKWorkoutActivityType.basketball                   ,
        7    : HKWorkoutActivityType.bowling                      ,
        8    : HKWorkoutActivityType.boxing                       ,
        9    : HKWorkoutActivityType.climbing                     ,
        10   : HKWorkoutActivityType.cricket                      ,
        11   : HKWorkoutActivityType.crossTraining                ,
        12   : HKWorkoutActivityType.curling                      ,
        13   : HKWorkoutActivityType.cycling                      ,
        14   : HKWorkoutActivityType.dance                        ,
        15   : HKWorkoutActivityType.danceInspiredTraining        ,
        16   : HKWorkoutActivityType.elliptical                   ,
        17   : HKWorkoutActivityType.equestrianSports             ,
        18   : HKWorkoutActivityType.fencing                      ,
        19   : HKWorkoutActivityType.fishing                      ,
        20   : HKWorkoutActivityType.functionalStrengthTraining   ,
        21   : HKWorkoutActivityType.golf                         ,
        22   : HKWorkoutActivityType.gymnastics                   ,
        23   : HKWorkoutActivityType.handball                     ,
        24   : HKWorkoutActivityType.hiking                       ,
        25   : HKWorkoutActivityType.hockey                       ,
        26   : HKWorkoutActivityType.hunting                      ,
        27   : HKWorkoutActivityType.lacrosse                     ,
        28   : HKWorkoutActivityType.martialArts                  ,
        29   : HKWorkoutActivityType.mindAndBody                  ,
        30   : HKWorkoutActivityType.mixedMetabolicCardioTraining ,
        31   : HKWorkoutActivityType.paddleSports                 ,
        32   : HKWorkoutActivityType.play                         ,
        33   : HKWorkoutActivityType.preparationAndRecovery       ,
        34   : HKWorkoutActivityType.racquetball                  ,
        35   : HKWorkoutActivityType.rowing                       ,
        36   : HKWorkoutActivityType.rugby                        ,
        37   : HKWorkoutActivityType.running                      ,
        38   : HKWorkoutActivityType.sailing                      ,
        39   : HKWorkoutActivityType.skatingSports                ,
        40   : HKWorkoutActivityType.snowSports                   ,
        41   : HKWorkoutActivityType.soccer                       ,
        42   : HKWorkoutActivityType.softball                     ,
        43   : HKWorkoutActivityType.squash                       ,
        44   : HKWorkoutActivityType.stairClimbing                ,
        45   : HKWorkoutActivityType.surfingSports                ,
        46   : HKWorkoutActivityType.swimming                     ,
        47   : HKWorkoutActivityType.tableTennis                  ,
        48   : HKWorkoutActivityType.tennis                       ,
        49   : HKWorkoutActivityType.trackAndField                ,
        50   : HKWorkoutActivityType.traditionalStrengthTraining  ,
        51   : HKWorkoutActivityType.volleyball                   ,
        52   : HKWorkoutActivityType.walking                      ,
        53   : HKWorkoutActivityType.waterFitness                 ,
        54   : HKWorkoutActivityType.waterPolo                    ,
        55   : HKWorkoutActivityType.waterSports                  ,
        56   : HKWorkoutActivityType.wrestling                    ,
        57   : HKWorkoutActivityType.yoga                         ,
        3000 : HKWorkoutActivityType.other
    ]

    public let mcActivityToHKQuantity: [Int: String] = [
        58   : HKQuantityTypeIdentifier.stepCount.rawValue                 ,
        59   : HKQuantityTypeIdentifier.distanceWalkingRunning.rawValue    ,
        60   : HKQuantityTypeIdentifier.flightsClimbed.rawValue
    ]

}
